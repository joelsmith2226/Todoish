{"version":3,"sources":["components/layout/Header.js","firebase.js","constants/index.js","hooks/index.js","helpers/index.js","context/projects-context.js","context/selected-project-context.js","components/IndividualProject.js","components/Projects.js","components/AddProject.js","components/layout/Sidebar.js","components/Checkbox.js","components/Tasks.js","components/layout/Content.js","index.js","App.js"],"names":["Header","className","data-testid","src","alt","firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","collatedTasks","key","name","useTasks","selectedProject","useState","tasks","setTasks","archivedTasks","setArchivedTasks","useEffect","unsubscribe","firestore","collection","where","find","task","collatedTasksExist","moment","format","onSnapshot","snapshot","newTasks","docs","map","id","data","filter","diff","archived","ProjectsContext","createContext","ProjectsProvider","children","projects","setProjects","orderBy","get","then","allProjects","project","docId","JSON","stringify","useProjects","Provider","value","useProjectsValue","useContext","SelectedProjectContext","SelectedProjectProvider","setSelectedProject","useSelectedProjectValue","IndividualProject","showConfirm","setShowConfirm","onClick","type","doc","delete","Projects","activeValue","active","setActive","data-doc-id","onKeyDown","AddProject","Sidebar","showProjects","Checkbox","update","Tasks","console","log","data-test-id","Content","render","document","getElementById"],"mappings":"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","file":"static/js/main.a99dae24.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaPizzaSlice } from 'react-icons/fa';\r\nexport const Header = () => {\r\n   return <header className=\"header\" data-testid=\"header\">\r\n      <nav>\r\n         <div className=\"logo\">\r\n            <img src=\"/images/logo.png\" alt=\"Todist\" />\r\n         </div>\r\n         <div className=\"settings\">\r\n            <ul>\r\n            <li data-testid=\"quick-add-task-action\" className=\"settings__add\">+</li>\r\n            <li data-testid=\"dark-mode-action\" className=\"settings__darkmode\"><FaPizzaSlice/></li>\r\n            </ul>\r\n         </div>\r\n      </nav>\r\n   </header>\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = firebase.initializeApp({\r\n   apiKey: \"AIzaSyBUZuJQafBjuKxufsfH2YvHCGCZqa1F5Mw\",\r\n   authDomain: \"todoist-1fa7f.firebaseapp.com\",\r\n   databaseURL: \"https://todoist-1fa7f.firebaseio.com\",\r\n   projectId: \"todoist-1fa7f\",\r\n   storageBucket: \"todoist-1fa7f.appspot.com\",\r\n   messagingSenderId: \"676670951114\",\r\n   appId: \"1:676670951114:web:59f68672f2ab471be26e33\",\r\n   measurementId: \"G-DTLS44ET7F\"\r\n});\r\n\r\nexport { firebaseConfig as firebase };\r\n","export const collatedTasks = [\r\n   {key: 'INBOX', name: 'Inbox'},\r\n   {key: 'TODAY', name: 'Today'},\r\n   {key: 'NEXT_7', name: 'Next 7 Days'},\r\n];\r\n","import { useState, useEffect } from 'react';\r\nimport { firebase } from '../firebase';\r\nimport {collatedTasksExist } from '../helpers';\r\nimport moment from 'moment';\r\n\r\nexport const useTasks = selectedProject => {\r\n   const [tasks, setTasks] = useState([]);\r\n   const [archivedTasks, setArchivedTasks] = useState([]);\r\n\r\n   useEffect (() => {\r\n      let unsubscribe = firebase\r\n      .firestore()\r\n      .collection('tasks')\r\n      .where('userId', '==', 'fadsadsfasd34325ewf23');\r\n\r\n      unsubscribe =\r\n         selectedProject && !collatedTasksExist(selectedProject)\r\n            ? (unsubscribe = unsubscribe.where('projectId', '==', selectedProject))\r\n            : selectedProject === 'TODAY'\r\n            ? (unsubscribe = unsubscribe.where(\r\n               'date',\r\n               '==',\r\n               moment().format('DD/MM/YYYY')\r\n            ))\r\n            : selectedProject === 'INBOX' || selectedProject === 0\r\n            ? (unsubscribe = unsubscribe.where('data', '==', ''))\r\n            : unsubscribe;\r\n\r\n      unsubscribe = unsubscribe.onSnapshot(snapshot => {\r\n         const newTasks = snapshot.docs.map(task => ({\r\n            id: task.id,\r\n            ...task.data(),\r\n         }));\r\n\r\n         setTasks(\r\n            selectedProject === \"NEXT_7\"\r\n            ? newTasks.filter(\r\n               task =>\r\n                  moment(task.data, 'DD/MM/YYYY').diff(moment(), 'days') <= 7 &&\r\n                  task.archived !== true\r\n               )\r\n            : newTasks.filter(task => task.archived !== true)\r\n         );\r\n\r\n         setArchivedTasks(newTasks.filter(task => task.archived !== false));\r\n      });\r\n\r\n      return () => unsubscribe();\r\n   }, [selectedProject]);\r\n\r\n   return { tasks, archivedTasks };\r\n};\r\n\r\nexport const useProjects = () => {\r\n   const [projects, setProjects] = useState([]);\r\n\r\n   useEffect(() => {\r\n      firebase\r\n         .firestore()\r\n         .collection('projects')\r\n         .where('userId', '==', 'fadsadsfasd34325ewf23')\r\n         .orderBy('projectId')\r\n         .get()\r\n         .then(snapshot => {\r\n            const allProjects = snapshot.docs.map(project => ({\r\n               ...project.data(),\r\n               docId: project.id,\r\n            }));\r\n\r\n            if (JSON.stringify(allProjects) !== JSON.stringify(projects)) {\r\n               setProjects(allProjects);\r\n            }\r\n         });\r\n   }, [projects]);\r\n\r\n   return { projects, setProjects };\r\n};\r\n","import { collatedTasks } from '../constants';\r\n\r\nexport const collatedTasksExist = selectedProject =>\r\n   collatedTasks.find(task => task.key === selectedProject);\r\n","import React, { createContext, useContext } from 'react';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const ProjectsContext = createContext();\r\n\r\nexport const ProjectsProvider = ({children}) => {\r\n   const { projects, setProjects } = useProjects();\r\n\r\n   return (\r\n      <ProjectsContext.Provider value={{projects, setProjects}}>\r\n         { children }\r\n      </ProjectsContext.Provider>\r\n   );\r\n};\r\n\r\nexport const useProjectsValue = () => useContext(ProjectsContext);\r\n","import React, { createContext, useContext, useState } from 'react';\r\nimport { useProjects } from '../hooks';\r\n\r\nexport const SelectedProjectContext = createContext();\r\nexport const SelectedProjectProvider = ({ children }) => {\r\n   const [ selectedProject, setSelectedProject ] = useState('INBOX');\r\n\r\n   return (\r\n      <SelectedProjectContext.Provider value={{selectedProject, setSelectedProject}}>\r\n      {children}\r\n      </SelectedProjectContext.Provider>\r\n   );\r\n};\r\n\r\nexport const useSelectedProjectValue = () => useContext(SelectedProjectContext);\r\n","import React, {useState} from 'react';\r\nimport { FaTrashAlt } from 'react-icons/fa';\r\nimport { useProjectsValue, useSelectedProjectValue } from \"../context\";\r\nimport { firebase } from '../firebase';\r\n\r\nexport const IndividualProject = ({ project }) => {\r\n   const [showConfirm, setShowConfirm] = useState(false);\r\n   const {projects, setProjects} = useProjectsValue();\r\n   const {setSelectedProject} = useSelectedProjectValue();\r\n\r\n   const deleteProject = docId => {\r\n      firebase\r\n         .firestore()\r\n         .collection('projects')\r\n         .doc(docId)\r\n         .delete()\r\n         .then(() => {\r\n            setProjects([...projects]);\r\n            setSelectedProject('INBOX');\r\n         });\r\n      };\r\n   return (\r\n      <>\r\n         <span className=\"sidebar__dot\">•</span>\r\n         <span className=\"sidebar__project-name\">{project.name}</span>\r\n         <span className=\"sidebar__project-delete\"\r\n               data-testid=\"delete-project\"\r\n               onClick={() => setShowConfirm(!showConfirm)}>\r\n               <FaTrashAlt />\r\n               {showConfirm && (\r\n                  <div className=\"project-delete-modal\">\r\n                     <div className=\"project-delete-modal__inner\">\r\n                        <p>Are you sure you want to delete this project?</p>\r\n                        <button type=\"button\"\r\n                        onClick={()=> deleteProject(project.docId)}>\r\n                        Delete</button>\r\n                        <span onClick={() => setShowConfirm(!showConfirm)}>Cancel</span>\r\n                     </div>\r\n                  </div>\r\n               )}\r\n         </span>\r\n      </>\r\n   );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useSelectedProjectValue, useProjectsValue } from '../context';\r\nimport { IndividualProject } from './IndividualProject'\r\n\r\nexport const Projects = ({ activeValue = null }) => {\r\n   const [active, setActive] = useState(activeValue);\r\n   const { setSelectedProject } = useSelectedProjectValue();\r\n   const { projects } = useProjectsValue();\r\n\r\n   return (\r\n      projects &&\r\n      projects.map(project => (\r\n         <li\r\n            key={project.projectId}\r\n            data-doc-id={project.docId}\r\n            data-testid=\"project-action\"\r\n            className={\r\n               active === project.projectId\r\n                  ? 'active_sidebar__project'\r\n                  : 'sidebar__project'\r\n            }\r\n            onKeyDown={() => {\r\n               setActive(project.projectId);\r\n               setSelectedProject(project.projectId);\r\n            }}\r\n            onClick={() => {\r\n               setActive(project.projectId);\r\n               setSelectedProject(project.projectId);\r\n            }}>\r\n            <IndividualProject project={project}/>\r\n            </li>\r\n      ))\r\n   );\r\n};\r\n","import React from 'react';\r\n\r\nexport const AddProject = () => <p>Add Project Component here</p>\r\n","import React, { useState } from 'react';\r\nimport { FaChevronDown,\r\n         FaInbox,\r\n         FaRegCalendarAlt,\r\n         FaRegCalendar\r\n      } from 'react-icons/fa';\r\n\r\nimport { useSelectedProjectValue } from '../../context';\r\nimport { Projects } from \"../Projects\";\r\nimport { AddProject } from \"../AddProject\";\r\n\r\nexport const Sidebar = () => {\r\n   const { setSelectedProject } = useSelectedProjectValue;\r\n   const [active, setActive] = useState('inbox');\r\n   const [showProjects, setShowProjects] = useState(true);\r\n\r\n   return (\r\n      <div className=\"sidebar\" data-testid=\"sidebar\">\r\n         <ul className=\"sidebar__generic\">\r\n            <li data-testid=\"inbox\" className=\"inbox\"><span>\r\n                  <FaInbox />\r\n               </span>\r\n               <span>Inbox</span>\r\n            </li>\r\n            <li data-testid=\"today\" className=\"today\"><span>\r\n                  <FaRegCalendar />\r\n               </span>\r\n               <span>Today</span>\r\n            </li>\r\n            <li data-testid=\"next_7\" className=\"next_7\"><span>\r\n                  <FaRegCalendarAlt/>\r\n               </span>\r\n               <span>Next 7 Days</span>\r\n            </li>\r\n         </ul>\r\n         <div className=\"sidebar__middle\">\r\n            <span><FaChevronDown /></span>\r\n            <h2>Projects</h2>\r\n         </div>\r\n\r\n         <ul className=\"sidebar__projects\">{showProjects && <Projects />}</ul>\r\n         {showProjects && <AddProject />}\r\n      </div>\r\n   )\r\n};\r\n","import React from 'react';\r\nimport { firebase } from '../firebase';\r\n\r\nexport const Checkbox = ({ id }) => {\r\n   const archiveTask = () => {\r\n      firebase\r\n         .firestore()\r\n         .collection('tasks')\r\n         .doc(id)\r\n         .update({\r\n            archived: true,\r\n         });\r\n   };\r\n\r\n   return (\r\n      <div className=\"checkbox-holder\" data-testid=\"checkbox-action\"\r\n      onClick={()=> archiveTask()}>\r\n         <span className=\"checkbox\"></span>\r\n      </div>\r\n   )\r\n};\r\n","import React from 'react';\r\nimport { Checkbox } from \"./Checkbox\";\r\nimport { useTasks } from '../hooks';\r\n\r\n\r\nexport const Tasks = () => {\r\n   const { tasks } = useTasks('1');\r\n\r\n   console.log(tasks);\r\n   let projectName = '';\r\n\r\n   return (\r\n      <div className=\"tasks\" data-testid=\"tasks\">\r\n         <h2 data-test-id=\"project-name\">{projectName}</h2>\r\n         <ul className=\"tasks__list\">\r\n            {tasks.map(task=> (\r\n               <li key={`${task.id}`}>\r\n                  <Checkbox id={task.id} />\r\n                  <span>{task.task}</span>\r\n               </li>\r\n            ))}\r\n         </ul>\r\n\r\n\r\n      </div>\r\n   )\r\n}\r\n","import React from 'react';\r\nimport { Sidebar } from './Sidebar';\r\nimport { Tasks } from '../Tasks';\r\nexport const Content = () => (\r\n      <section>\r\n         <Sidebar />\r\n         <Tasks />\r\n      </section>\r\n)\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { App } from './App';\r\nimport './App.scss';\r\nrender(<App />, document.getElementById('root'));\r\n","import React from 'react';\r\nimport { Header } from './components/layout/Header';\r\nimport { Content } from './components/layout/Content';\r\nimport { ProjectsProvider, SelectedProjectProvider } from './context';\r\n\r\nexport const App = () => (\r\n   <SelectedProjectProvider>\r\n      <ProjectsProvider>\r\n         <div className=\"App\">\r\n         <Header />\r\n         <Content />\r\n         </div>\r\n      </ProjectsProvider>\r\n    </SelectedProjectProvider>);\r\n"],"sourceRoot":""}